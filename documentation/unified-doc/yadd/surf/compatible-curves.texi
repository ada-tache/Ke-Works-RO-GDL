@subsubsection Compatible-curves

@b{Description}

Experimental. This primitive takes in a list of GDL 
curve objects and will compute a sequence of new curve objects which have been made 
to be compatible in terms of number of control points, knot vectors, and degree.

@noindent @b{Required-input-slots}

@b{:curve-list}

@itemize {}

 @item List of GDL curve objects.

@end itemize

@noindent @b{Optional-input-slots}

@b{:bounding-box}

@itemize {}

 @item List of two 3D points. The left front bottom and right rear top corners, in global coordinates,
of the rectangular volume bounding the tree of geometric objects rooted at this object.

@end itemize

@b{:hidden?}

@itemize {}

 @item Boolean. Indicates whether the object should effectively be a hidden-object even if specified in :objects. Default is nil.

@end itemize

@b{:image-file}

@itemize {}

 @item Pathname or string. Points to a pre-existing image file to be displayed instead of actual geometry for this object. Defaults to nil

@end itemize

@b{:local-box}

@itemize {}

 @item List of two 3D points. The left front bottom and right rear top corners, in global coordinates,
of the rectangular volume bounding this geometric object.

@end itemize

@b{:obliqueness}

@itemize {}

 @item 3x3 Orthonormal Matrix of Double-Float Numbers. This is synonymous with the orientation.

@end itemize

@b{:root}

@itemize {}

 @item GDL Instance. The root-level node in this object's ``tree'' (instance hierarchy).

@end itemize

@b{:strings-for-display}

@itemize {}

 @item String or List of Strings. Determines how the name of objects of this type will be printed in most places. 
This defaults to the name-for-display (generally the part's name as specified in its
parent), followed by an index number if the part is an element of a sequence.

@end itemize

@b{:visible-children}

@itemize {}

 @item List of GDL Instances. Additional objects to display in Tatu tree. Typically this would be a subset of hidden-children. Defaults to NIL.

@end itemize

@noindent @b{Defaulted-input-slots}

@b{:center}

@itemize {}

 @item 3D Point. Indicates in global coordinates where the center of the reference 
box of this object should be located.

@end itemize

@b{:display-controls}

@itemize {}

 @item Plist. May contain keywords and values indicating display characteristics for
 this object. The following keywords are recognized currently:
 
 @itemize {} 
 @item :color
 @itemize @minus  color keyword from the *color-table* parameter, or an HTML-style hexidecimal
RGB string value, e.g. "#FFFFFF" for pure white. Defaults to :black.
@end itemize 


 @item :line-thickness
  @itemize @minus  an integer, defaulting to 1, indicating relative line thickness for wireframe
representations of this object.
@end itemize 


 @item :dash-pattern
 @itemize @minus (currently PDF/PNG/JPEG only). This is a list of two or three numbers which indicate the length,
 in pixels, of the dashes and blank spaces in a dashed line. The optional third number
 indicates how far into the line or curve to start the dash pattern.
@end itemize 



@end itemize 



@end itemize

@b{:height}

@itemize {}

 @item Number. Z-axis dimension of the reference box. Defaults to zero.

@end itemize

@b{:length}

@itemize {}

 @item Number. Y-axis dimension of the reference box. Defaults to zero.

@end itemize

@b{:orientation}

@itemize {}

 @item 3x3 Matrix of Double-Float Numbers. Indicates the absolute Rotation Matrix used to create 
the coordinate system of this object. This matrix is given in absolute terms (i.e. with 
respect to the root's orientation), and is generally created with the alignment function. 
It should be an @i{orthonormal}  matrix, meaning each row is a vector with a magnitude 
of one (1.0).


@end itemize

@b{:width}

@itemize {}

 @item Number. X-axis dimension of the reference box. Defaults to zero.

@end itemize





@noindent @b{Quantified-objects}

@b{:curves}

@itemize {}

 @item Sequence of GDL Curve objects. These are the resultant curves which 
 are supposed to be compatible.

@end itemize







@noindent @b{Examples}

@smallexample
 
 (in-package :gdl-user)

 (define-object test-compatible-curves ()
  
  :objects
  ((b-spline :type 'b-spline-curve
	     :control-points (list (make-point 0 0 0)
				   (make-point -1 0 0)
				   (make-point -1 1 0)
				   (make-point 0 1 0)))
   
   (linear-curve :type 'linear-curve
		 :start (make-point 0 1 0)
		 :end (make-point 4 1 0))
   
   (compatible-curves :type 'compatible-curves
		      :curve-list (list (the b-spline) (the linear-curve)))))

  (generate-sample-drawing :object-roots (list (make-object 'test-compatible-curves)))


@end smallexample



 @b{Example image is not generated!}

